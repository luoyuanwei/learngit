如果出现冒号":"无法输入指令，可以按"q"键返回到可以键入git指令状态

文件提交：add和commit指令
把一个文件放到Git仓库只需要两步：
1、用命令git add告诉Git，把文件添加到仓库：
  $ git add 文件名.文件后缀名

2、用命令git commit告诉Git，把文件提交到仓库：
  $ git commit -m "编写修改描述"

仓库当前状态的查看：status指令和diff指令
1、git status命令可以让我们时刻掌握仓库当前的状态
   在执行第二步git commit之前，我们再运行git status看看当前仓库的状态

2、用git diff这个命令，能看看具体修改了什么内容

版本回退：log指令、log --pretty=oneline指令、$ git reset --hard HEAD^指令、$ git reflog指令
1、$ git log 版本控制系统log命令可以告诉我们版本的历史记录
   commit id：版本号
2、$ git log --pretty=oneline指令执行结果只显示一行信息，包括版本号和修改描述。

3、$ git reset --hard HEAD^：版本回退到上一个版本，回退到上面两个版本可以是用"HEAD^^"

4、$ git reflog：该指令用来记录每次执行的命令

5、总结：
5.1、HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

5.2、穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

5.3、要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

工作区和暂存区：
1、工作区（Working Directory）：在电脑里能看到的目录

2、版本库（Repository）：工作区有一个隐藏目录.git，即是Git的版本库。
2.1、Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的
第一个分支master，以及指向master的一个指针叫HEAD。
2.2、把文件往Git版本库里添加的时候，是分两步执行的：因为我们创建Git版本库时，Git自动为我们创建了唯一一个
master分支，所以，现在，git commit就是往master分支上提交更改。
2.2.1、第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；
2.2.2、第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。

git管理的是修改：第一次修改 -> git add -> 第二次修改 -> git add -> git commit
即：只有修改后的文件添加到暂存区，才能提交到分支。

撤销修改： git checkout --文件名.后缀名 ；$ git reset HEAD 文件名.后缀名
1、命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
总之，就是让这个文件回到最近一次git commit或git add时的状态。

2、git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。

总结：
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令
git reset HEAD file，就回到了场景1，第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

删除文件：$ rm file
小结：
命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能
恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。

远程仓库：
GitHub申请账号：
	第1步：创建SSH Key。在用系统户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有
id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），
创建SSH Key：
$ ssh-keygen -t rsa -C "youremail@example.com"

	第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面
然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容：

